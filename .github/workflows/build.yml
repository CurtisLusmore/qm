name: Build and publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Build front-end project
      run: npm run cibuild --prefix fe

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Build back-end project
      run: |
        dotnet build be --property:Revision=${{ github.run_number }}
        version=$(dotnet run --project be --no-build -- --version)
        version="${version%%+*}" # Strip the build metadata (Git commit SHA)
        echo "RELEASE_VERSION=$version" >> $GITHUB_ENV
        echo "Set RELEASE_VERSION to $version"

    - name: Pack and push .NET tool
      run: |
        dotnet pack be --property:Revision=${{ github.run_number }} --output ./nupkg
        dotnet nuget push ./nupkg/*.nupkg \
          --api-key ${{ secrets.NUGET_API_KEY }} \
          --source https://api.nuget.org/v3/index.json

    - name: Create draft GitHub release
      run: |
        gh release create "${{ env.RELEASE_VERSION }}" \
          --title "${{ env.RELEASE_VERSION }}" \
          --draft
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish back-end project for Windows x64
      run: |
        dotnet publish be --property:Revision=${{ github.run_number }} --runtime win-x64
        zip -j win-x64.zip be/bin/Release/net8.0/win-x64/publish/qm.exe
        gh release upload "${{ env.RELEASE_VERSION }}" win-x64.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish back-end project for Windows x86
      run: |
        dotnet publish be --property:Revision=${{ github.run_number }} --runtime win-x86
        zip -j win-x86.zip be/bin/Release/net8.0/win-x86/publish/qm.exe
        gh release upload "${{ env.RELEASE_VERSION }}" win-x86.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish back-end project for Windows ARM64
      run: |
        dotnet publish be --property:Revision=${{ github.run_number }} --runtime win-arm64
        zip -j win-arm64.zip be/bin/Release/net8.0/win-arm64/publish/qm.exe
        gh release upload "${{ env.RELEASE_VERSION }}" win-arm64.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish back-end project for macOS x64
      run: |
        dotnet publish be --property:Revision=${{ github.run_number }} --runtime osx-x64
        tar -czvf osx-x64.tar.gz -C be/bin/Release/net8.0/osx-x64/publish qm
        gh release upload "${{ env.RELEASE_VERSION }}" osx-x64.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish back-end project for macOS ARM64
      run: |
        dotnet publish be --property:Revision=${{ github.run_number }} --runtime osx-arm64
        tar -czvf osx-arm64.tar.gz -C be/bin/Release/net8.0/osx-arm64/publish qm
        gh release upload "${{ env.RELEASE_VERSION }}" osx-arm64.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish back-end project for Linux x64
      run: |
        dotnet publish be --property:Revision=${{ github.run_number }} --runtime linux-x64
        tar -czvf linux-x64.tar.gz -C be/bin/Release/net8.0/linux-x64/publish qm
        gh release upload "${{ env.RELEASE_VERSION }}" linux-x64.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish back-end project for Linux ARM
      run: |
        dotnet publish be --property:Revision=${{ github.run_number }} --runtime linux-arm
        tar -czvf linux-arm.tar.gz -C be/bin/Release/net8.0/linux-arm/publish qm
        gh release upload "${{ env.RELEASE_VERSION }}" linux-arm.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish back-end project for Linux ARM64
      run: |
        dotnet publish be --property:Revision=${{ github.run_number }} --runtime linux-arm64
        tar -czvf linux-arm64.tar.gz -C be/bin/Release/net8.0/linux-arm64/publish qm
        gh release upload "${{ env.RELEASE_VERSION }}" linux-arm64.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish release
      run: gh release edit "${{ env.RELEASE_VERSION }}" --draft=false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
